image: docker:26.1.3
services:
  - docker:26.1.3-dind

stages:
  - Build and Test

Test Project:
  stage: Build and Test
  image: docker:26.1.3
  services:
    - docker:26.1.3-dind
  script:
    - apk add --update docker-compose
    - echo -e "@development-suite:registry=https://gitlab.com/api/v4/projects/59180469/packages/npm/" > .npmrc
    - echo -e "//${CI_SERVER_HOST}/api/v4/projects/59180469/packages/npm/:_authToken=$NPM_TOKEN" >> .npmrc
    - docker-compose build
    - docker-compose run --rm monitor sh -c "npm run test"
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^(main|production|staging)$/ || $CI_COMMIT_BRANCH =~ /^(main|production|staging)$/'
    
# Build and Push Dev:
#   image: docker:26.1.4
#   services:
#     - docker:26.1.4-dind
#   stage: Build and Push
#   script:
#     - apk add python3
#     - pip3 install awscli
#     - docker build --compress -t $ECR_REPO:$CI_COMMIT_SHORT_SHA .
#     - $(aws ecr get-login --no-include-email --region $ECR_REGION)
#     - docker push $ECR_REPO:$CI_COMMIT_SHORT_SHA
#     - docker tag $ECR_REPO:$CI_COMMIT_SHORT_SHA $ECR_REPO:dev
#     - docker push $ECR_REPO:dev
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "dev"'

# Build and Push Staging:
#   image: docker:26.1.4
#   services:
#     - docker:26.1.4-dind
#   stage: Build and Push
#   script:
#     - apk add python3
#     - pip3 install awscli
#     - docker build --compress -t $ECR_REPO:$CI_COMMIT_SHORT_SHA .
#     - $(aws ecr get-login --no-include-email --region $ECR_REGION)
#     - docker push $ECR_REPO:$CI_COMMIT_SHORT_SHA
#     - docker tag $ECR_REPO:$CI_COMMIT_SHORT_SHA $ECR_REPO:staging
#     - docker push $ECR_REPO:staging
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "staging"'

# Build and Push Production:
#   image: docker:26.1.4
#   services:
#     - docker:26.1.4-dind
#   stage: Build and Push
#   script:
#     - apk add python3
#     - pip3 install awscli
#     - docker build --compress -t $ECR_REPO:$CI_COMMIT_SHORT_SHA .
#     - $(aws ecr get-login --no-include-email --region $ECR_REGION)
#     - docker push $ECR_REPO:$CI_COMMIT_SHORT_SHA
#     - docker tag $ECR_REPO:$CI_COMMIT_SHORT_SHA $ECR_REPO:production
#     - docker push $ECR_REPO:production
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "production"'

