{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "Monitor Engine API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:8000",
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Local server"
    }
  ],
  "basePath": "/",
  "tags": [
    {
      "name": "Monitor",
      "description": "Endpoints for monitoring websites"
    },
    {
      "name": "Events",
      "description": "Endpoints for viewing events"
    },
    {
      "name": "Main",
      "description": "Endpoints for general API functionality"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Token used to authenticate with network."
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Main"
        ],
        "description": "Endpoint for checking the health of the API.",
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 200
                },
                "service": {
                  "type": "string",
                  "example": "Monitor Engine"
                },
                "message": {
                  "type": "string",
                  "example": "Systems online"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "OK"
          }
        }
      }
    },
    "/api/monitor/details": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "x-network-authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/monitor/monitors/": {
      "get": {
        "tags": [
          "Monitor"
        ],
        "description": "Endpoint for getting all monitors.",
        "parameters": [
          {
            "name": "x-network-authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MonitorResponse"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Monitor"
        ],
        "description": "Endpoint for creating a monitor.",
        "parameters": [
          {
            "name": "x-network-authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Monitor object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitorBody"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/MonitorResponse"
            },
            "description": "Monitor created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/monitor/monitors/{id}": {
      "get": {
        "tags": [
          "Monitor"
        ],
        "description": "Endpoint for getting a single monitor.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Monitor ID"
          },
          {
            "name": "x-network-authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MonitorResponse"
            },
            "description": "Monitor updated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Monitor"
        ],
        "description": "Endpoint for updating a monitor.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Monitor ID"
          },
          {
            "name": "x-network-authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Monitor object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitorBody"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MonitorResponse"
            },
            "description": "Monitor updated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Monitor"
        ],
        "description": "Endpoint for updating a monitor.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Monitor ID"
          },
          {
            "name": "x-network-authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Monitor object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitorBody"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MonitorResponse"
            },
            "description": "Monitor updated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Monitor"
        ],
        "description": "Endpoint for deleting a single monitor.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Monitor ID"
          },
          {
            "name": "x-network-authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Monitor deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Monitor deleted"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error500"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "MonitorBody": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string",
          "example": "0"
        },
        "url": {
          "type": "string",
          "example": "http://www.example.com"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "example": "user@example.com"
              }
            }
          }
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "title": {
          "type": "string",
          "example": "Example"
        }
      }
    },
    "EventBody": {
      "type": "object",
      "properties": {
        "monitorId": {
          "type": "string",
          "example": "5f9b0b0b9b9b9b9b9b9b9b9b"
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "online": {
          "type": "boolean",
          "example": true
        },
        "timestamp": {
          "type": "string",
          "example": "2020-10-30T15:31:15.000Z"
        },
        "message": {
          "type": "string",
          "example": "Example log message."
        },
        "responseTime": {
          "type": "number",
          "example": 200
        }
      }
    },
    "RegisterEventBody": {
      "type": "object",
      "properties": {
        "monitorId": {
          "type": "string",
          "example": "5f9b0b0b9b9b9b9b9b9b9b9b"
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "status": {
          "type": "string",
          "example": "online"
        },
        "message": {
          "type": "string",
          "example": "Test event"
        }
      }
    },
    "MonitorResponse": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string",
          "example": "0"
        },
        "url": {
          "type": "string",
          "example": "http://www.example.com"
        },
        "users": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "title": {
          "type": "string",
          "example": "Example"
        },
        "online": {
          "type": "boolean",
          "example": true
        },
        "_id": {
          "type": "string",
          "example": "5f9b0b0b9b9b9b9b9b9b9b9b"
        },
        "__v": {
          "type": "number",
          "example": 0
        }
      }
    },
    "EventResponse": {
      "type": "object",
      "properties": {
        "monitorId": {
          "type": "string",
          "example": "5f9b0b0b9b9b9b9b9b9b9b9b"
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "online": {
          "type": "boolean",
          "example": true
        },
        "timestamp": {
          "type": "string",
          "example": "2020-10-30T15:31:15.000Z"
        },
        "message": {
          "type": "string",
          "example": "Example log message."
        },
        "responseTime": {
          "type": "number",
          "example": 200
        },
        "_id": {
          "type": "string",
          "example": "5f9b0b0b9b9b9b9b9b9b9b9b"
        },
        "__v": {
          "type": "number",
          "example": 0
        }
      }
    },
    "MonitorResponseDetailed": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "657e38cd7e817f716788e286"
        },
        "project": {
          "type": "string",
          "example": "Example Project"
        },
        "company": {
          "type": "string",
          "example": "IkeHunter Web Development"
        },
        "url": {
          "type": "string",
          "example": "https://ikehunter.com/test/"
        },
        "recipients": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "status": {
          "type": "string",
          "example": ""
        },
        "targetStatusCode": {
          "type": "number",
          "example": 200
        },
        "currentStatusCode": {
          "type": "number",
          "example": 200
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "title": {
          "type": "string",
          "example": "IkeHunter live 2"
        },
        "type": {
          "type": "string",
          "example": "http"
        },
        "dateAdded": {
          "type": "string",
          "example": "2023-12-16T23:54:53.025Z"
        },
        "responseTime": {
          "type": "number",
          "example": -1
        },
        "timeout": {
          "type": "number",
          "example": 30
        },
        "retries": {
          "type": "number",
          "example": 3
        },
        "coverImage": {
          "type": "string",
          "example": ""
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "657e4bb98a890b85d551182c"
              },
              "monitorId": {
                "type": "string",
                "example": "657e38cd7e817f716788e286"
              },
              "statusCode": {
                "type": "number",
                "example": 200
              },
              "online": {
                "type": "boolean",
                "example": true
              },
              "timestamp": {
                "type": "string",
                "example": "2023-12-17T01:15:37.188Z"
              },
              "message": {
                "type": "string",
                "example": "Example log message."
              },
              "responseTime": {
                "type": "number",
                "example": 200
              },
              "__v": {
                "type": "number",
                "example": 0
              }
            }
          }
        },
        "report": {
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "example": "2023-12-17T01:07:54.312Z"
            },
            "endDate": {
              "type": "string",
              "example": "2023-12-17T01:15:37.188Z"
            },
            "totalDays": {
              "type": "number",
              "example": 2
            },
            "totalUptimeMinutes": {
              "type": "number",
              "example": 7.7146
            },
            "totalDowntimeMinutes": {
              "type": "number",
              "example": 0
            },
            "daysWithDowntime": {
              "type": "array",
              "example": [],
              "items": {}
            },
            "totalEvents": {
              "type": "number",
              "example": 2
            },
            "totalUptimeEvents": {
              "type": "number",
              "example": 2
            },
            "totalDowntimeEvents": {
              "type": "number",
              "example": 0
            },
            "averageResponseTime": {
              "type": "number",
              "example": 200
            },
            "_id": {
              "type": "string",
              "example": "657e4c01ebafc9f07bc1d93e"
            },
            "__v": {
              "type": "number",
              "example": 0
            }
          }
        },
        "responses": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "responseTime": {
                "type": "number",
                "example": 0
              },
              "timestamp": {
                "type": "string",
                "example": "2023-12-17T01:16:49.845Z"
              }
            }
          }
        }
      }
    },
    "Error500": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "Error message..."
        }
      }
    },
    "Error404": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 404
        },
        "message": {
          "type": "string",
          "example": "Error message..."
        }
      }
    }
  }
}