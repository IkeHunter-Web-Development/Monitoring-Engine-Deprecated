{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "Monitor Engine API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:8000",
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Local server"
    }
  ],
  "basePath": "/",
  "tags": [
    {
      "name": "Monitor",
      "description": "Endpoints for monitoring websites"
    },
    {
      "name": "Incidents",
      "description": "Managing incidents via the REST Api"
    },
    {
      "name": "General",
      "description": "Endpoints for general API functionality"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Token used to authenticate with network."
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "General"
        ],
        "summary": "Health Check",
        "description": "Root route to check if the system is online.",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Success200"
            },
            "description": "Monitor Engine is operational."
          }
        }
      }
    },
    "/api/monitor/monitors/": {
      "get": {
        "tags": [
          "Monitor"
        ],
        "summary": "Get monitors",
        "description": "Endpoint for getting all monitors.",
        "parameters": [
          {
            "name": "x-network-authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MonitorMetaDoc"
            },
            "description": "Monitor updated"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error401"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          },
          "511": {
            "schema": {
              "$ref": "#/definitions/Error511"
            },
            "description": "Network authentication required"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Monitor"
        ],
        "summary": "Create new monitor",
        "description": "Endpoint for creating a monitor.",
        "parameters": [
          {
            "name": "x-network-authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Monitor object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitorDoc"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/MonitorMetaDoc"
            },
            "description": "Monitor created"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error401"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          },
          "511": {
            "schema": {
              "$ref": "#/definitions/Error511"
            },
            "description": "Network authentication required"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/monitor/monitors/{id}": {
      "get": {
        "tags": [
          "Monitor"
        ],
        "summary": "Get single monitor",
        "description": "Endpoint for getting a single monitor.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Monitor ID"
          },
          {
            "name": "x-network-authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MonitorMetaDoc"
            },
            "description": "Monitor updated"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error401"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error500"
            },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          },
          "511": {
            "schema": {
              "$ref": "#/definitions/Error511"
            },
            "description": "Network authentication required"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Monitor"
        ],
        "summary": "Update monitor",
        "description": "Endpoint for updating a monitor.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Monitor ID"
          },
          {
            "name": "x-network-authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Monitor object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitorDoc"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MonitorMetaDoc"
            },
            "description": "Monitor updated"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error401"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          },
          "511": {
            "schema": {
              "$ref": "#/definitions/Error511"
            },
            "description": "Network authentication required"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Monitor"
        ],
        "summary": "Update monitor",
        "description": "Endpoint for updating a monitor.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Monitor ID"
          },
          {
            "name": "x-network-authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Monitor object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitorDoc"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MonitorMetaDoc"
            },
            "description": "Monitor updated"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error401"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          },
          "511": {
            "schema": {
              "$ref": "#/definitions/Error511"
            },
            "description": "Network authentication required"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Monitor"
        ],
        "summary": "Delete monitor",
        "description": "Endpoint for deleting a single monitor.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Monitor ID"
          },
          {
            "name": "x-network-authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "schema",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Monitor deleted successfully",
            "schema": {
              "$ref": "#/definitions/MonitorMetaDoc"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error401"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          },
          "511": {
            "schema": {
              "$ref": "#/definitions/Error511"
            },
            "description": "Network authentication required"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/monitor/events/": {
      "get": {
        "description": "",
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          }
        }
      }
    },
    "/api/incident/incidents": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Create Incident",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Incident object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IncidentDoc"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/IncidentMetaDoc"
            },
            "description": "Created"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          }
        }
      },
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get Multiple Incidents",
        "description": "",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncidentMetaDoc"
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          }
        }
      }
    },
    "/api/incident/incidents/{id}": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get Incident",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncidentMetaDoc"
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          }
        }
      },
      "put": {
        "tags": [
          "Incidents"
        ],
        "summary": "Update Incident",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncidentMetaDoc"
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          }
        }
      },
      "patch": {
        "tags": [
          "Incidents"
        ],
        "summary": "Update Incident",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncidentMetaDoc"
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          }
        }
      },
      "delete": {
        "tags": [
          "Incidents"
        ],
        "summary": "Delete Incident",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncidentMetaDoc"
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          }
        }
      }
    },
    "/api/incident/active": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Start an active incident",
        "description": "",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncidentMetaDoc"
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          }
        }
      },
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get all active incidents",
        "description": "",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncidentMetaDoc"
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          }
        }
      }
    },
    "/api/incident/active/{id}": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get an active incident",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncidentMetaDoc"
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          }
        }
      },
      "put": {
        "tags": [
          "Incidents"
        ],
        "summary": "Update an active incident",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncidentMetaDoc"
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          }
        }
      },
      "patch": {
        "tags": [
          "Incidents"
        ],
        "summary": "Update an active incident",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncidentMetaDoc"
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          }
        }
      },
      "delete": {
        "tags": [
          "Incidents"
        ],
        "summary": "End an active incident",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncidentMetaDoc"
            },
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error400"
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error404"
            },
            "description": "Not found"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error501"
            },
            "description": "Not implemented"
          }
        }
      }
    }
  },
  "definitions": {
    "MonitorDoc": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "example": ""
        },
        "checkType": {
          "type": "string",
          "example": "http"
        },
        "retries": {
          "type": "number",
          "example": 0
        },
        "timeout": {
          "type": "number",
          "example": 0
        },
        "projectId": {
          "type": "string",
          "example": ""
        },
        "title": {
          "type": "string",
          "example": ""
        },
        "interval": {
          "type": "number",
          "example": 0
        },
        "icon": {
          "type": "string",
          "example": ""
        },
        "active": {
          "type": "boolean",
          "example": false
        },
        "reminderIntervals": {
          "type": "number",
          "example": 0
        },
        "subscribers": {
          "type": "array",
          "example": [],
          "items": {}
        }
      }
    },
    "MonitorMetaDoc": {
      "type": "object",
      "properties": {
        "availability": {
          "type": "string",
          "example": "pending"
        },
        "responseTime": {
          "type": "number",
          "example": 0
        },
        "id": {
          "type": "string",
          "example": ""
        },
        "uuid": {
          "type": "string",
          "example": ""
        },
        "status": {
          "type": "string",
          "example": "stable"
        },
        "lastCheck": {
          "type": "number",
          "example": 0
        },
        "createdAt": {
          "type": "number",
          "example": 0
        },
        "updatedAt": {
          "type": "number",
          "example": 0
        },
        "events": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "responses": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "projectId": {
          "type": "string",
          "example": ""
        },
        "title": {
          "type": "string",
          "example": ""
        },
        "interval": {
          "type": "number",
          "example": 0
        },
        "icon": {
          "type": "string",
          "example": ""
        },
        "active": {
          "type": "boolean",
          "example": false
        },
        "reminderIntervals": {
          "type": "number",
          "example": 0
        },
        "subscribers": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "url": {
          "type": "string",
          "example": ""
        },
        "checkType": {
          "type": "string",
          "example": "http"
        },
        "retries": {
          "type": "number",
          "example": 0
        },
        "timeout": {
          "type": "number",
          "example": 0
        }
      }
    },
    "IncidentDoc": {
      "type": "object",
      "properties": {
        "monitorId": {
          "type": "string",
          "example": ""
        },
        "impact": {
          "type": "string",
          "example": "maintenance"
        },
        "status": {
          "type": "string",
          "example": "pending"
        },
        "cause": {
          "type": "string",
          "example": ""
        }
      }
    },
    "IncidentMetaDoc": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "number",
          "example": 0
        },
        "updatedAt": {
          "type": "number",
          "example": 0
        },
        "resolvedAt": {
          "type": "number",
          "example": 0
        },
        "monitorId": {
          "type": "string",
          "example": ""
        },
        "impact": {
          "type": "string",
          "example": "maintenance"
        },
        "status": {
          "type": "string",
          "example": "pending"
        },
        "cause": {
          "type": "string",
          "example": ""
        }
      }
    },
    "Success200": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 200
        },
        "type": {
          "type": "string",
          "example": "Ok"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Success201": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 201
        },
        "type": {
          "type": "string",
          "example": "Created"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Success204": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 204
        },
        "type": {
          "type": "string",
          "example": "No Content"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Error400": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 400
        },
        "type": {
          "type": "string",
          "example": "Bad Request"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Error401": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 401
        },
        "type": {
          "type": "string",
          "example": "Unauthorized"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Error403": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 403
        },
        "type": {
          "type": "string",
          "example": "Forbidden"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Error404": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 404
        },
        "type": {
          "type": "string",
          "example": "Not Found"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Error405": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 405
        },
        "type": {
          "type": "string",
          "example": "Method Not Allowed"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Error409": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 409
        },
        "type": {
          "type": "string",
          "example": "Conflict"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Error410": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 410
        },
        "type": {
          "type": "string",
          "example": "Gone"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Error500": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 500
        },
        "type": {
          "type": "string",
          "example": "Internal Server Error"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Error501": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 501
        },
        "type": {
          "type": "string",
          "example": "Not Implemented"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Error502": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 502
        },
        "type": {
          "type": "string",
          "example": "Bad Gateway"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Error503": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 503
        },
        "type": {
          "type": "string",
          "example": "Service Unavailable"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Error504": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 504
        },
        "type": {
          "type": "string",
          "example": "Gateway Timeout"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    },
    "Error511": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 511
        },
        "type": {
          "type": "string",
          "example": "Network Authentication Required"
        },
        "message": {
          "type": "string",
          "example": "undefined"
        }
      }
    }
  }
}