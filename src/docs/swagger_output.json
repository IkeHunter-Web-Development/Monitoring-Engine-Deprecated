{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "Monitor Engine API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:8000",
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Local server"
    }
  ],
  "basePath": "/",
  "tags": [
    {
      "name": "Monitor",
      "description": "Endpoints for monitoring websites"
    },
    {
      "name": "Events",
      "description": "Endpoints for viewing events"
    },
    {
      "name": "Main",
      "description": "Endpoints for general API functionality"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Main"
        ],
        "description": "Endpoint for checking the health of the API.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 200
                },
                "service": {
                  "type": "string",
                  "example": "Monitor Engine"
                },
                "message": {
                  "type": "string",
                  "example": "Systems online"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/monitors/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Monitor"
        ],
        "description": "Endpoint for creating a monitor.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Monitor object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "projectId": {
                  "type": "string",
                  "example": "123456"
                },
                "url": {
                  "type": "string",
                  "example": "https://ikehunter.com"
                },
                "statusCode": {
                  "type": "number",
                  "example": 200
                },
                "title": {
                  "type": "string",
                  "example": "Example Monitor"
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "example": "123456"
                      },
                      "email": {
                        "type": "string",
                        "example": "user@example.com"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Monitor created",
            "schema": {
              "$ref": "#/definitions/Monitor"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error message..."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/monitors/{id}": {
      "get": {
        "tags": [
          "Monitor"
        ],
        "description": "Endpoint for getting a single monitor.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Monitor ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Monitor updated",
            "schema": {
              "$ref": "#/definitions/Monitor"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error message..."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Monitor"
        ],
        "description": "Endpoint for updating a monitor.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Monitor ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Monitor updated",
            "schema": {
              "$ref": "#/definitions/Monitor"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error message..."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "description": "Monitor object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "Example Monitor"
                  },
                  "projectId": {
                    "example": "1234567"
                  },
                  "url": {
                    "example": "https://ikehunter.com"
                  },
                  "statusCode": {
                    "example": 200
                  },
                  "users": {
                    "example": [
                      {
                        "userId": "123456",
                        "email": "user@example.com"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/monitors/{id}/online": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/monitors-search/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/events-search/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Monitor": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "number",
          "example": 0
        },
        "url": {
          "type": "string",
          "example": "http://www.example.com"
        },
        "users": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "title": {
          "type": "string",
          "example": "Example"
        },
        "online": {
          "type": "boolean",
          "example": true
        },
        "_id": {
          "type": "string",
          "example": "5f9b0b0b9b9b9b9b9b9b9b9b"
        },
        "__v": {
          "type": "number",
          "example": 0
        }
      }
    },
    "CreateMonitor": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "example": [
            "Monitor"
          ],
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "example": "Endpoint for creating a monitor."
        },
        "operationId": {
          "type": "string",
          "example": "createMonitor"
        },
        "consumes": {
          "type": "array",
          "example": [
            "application/json"
          ],
          "items": {
            "type": "string"
          }
        },
        "produces": {
          "type": "array",
          "example": [
            "application/json"
          ],
          "items": {
            "type": "string"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "in": {
                "type": "string",
                "example": "body"
              },
              "name": {
                "type": "string",
                "example": "body"
              },
              "description": {
                "type": "string",
                "example": "Monitor object"
              },
              "required": {
                "type": "boolean",
                "example": true
              },
              "schema": {
                "$ref": "#/components/schemas/createMonitorBody"
              }
            }
          }
        }
      }
    },
    "CreateMonitorBody": {
      "type": "object",
      "properties": {
        "content": {
          "type": "object",
          "properties": {
            "application/json": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "object",
                      "properties": {
                        "example": {
                          "type": "string",
                          "example": "Example Monitor"
                        }
                      }
                    },
                    "projectId": {
                      "type": "object",
                      "properties": {
                        "example": {
                          "type": "string",
                          "example": "1234567"
                        }
                      }
                    },
                    "url": {
                      "type": "object",
                      "properties": {
                        "example": {
                          "type": "string",
                          "example": "https://ikehunter.com"
                        }
                      }
                    },
                    "statusCode": {
                      "type": "object",
                      "properties": {
                        "example": {
                          "type": "number",
                          "example": 200
                        }
                      }
                    },
                    "users": {
                      "type": "object",
                      "properties": {
                        "example": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "string",
                                "example": "123456"
                              },
                              "email": {
                                "type": "string",
                                "example": "user@example.com"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "in": "header"
      }
    },
    "schemas": {}
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}